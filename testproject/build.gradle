plugins {
    id 'net.neoforged.moddev'
    id 'maven-publish'
}

evaluationDependsOn(":subproject") // Because of the sourceset reference

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}

sourceSets {
    api
}

group = "mdgtestproject"

dependencies {
    testImplementation(enforcedPlatform("org.junit:junit-bom:5.10.2"))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "net.neoforged:testframework:${project.neoforge_version}"

    implementation(accessTransformers(interfaceInjectionData(project(":subproject"))))
    implementation sourceSets.api.output
}

test {
    useJUnitPlatform()
}

neoForge {
    version = project.neoforge_version
    addModdingDependenciesTo(sourceSets.api)

    validateAccessTransformers = true
    interfaceInjectionData = files("interfaces.json")

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }
        client {
            client()
        }
        client2 {
            client()
            programArguments.addAll('--username', 'Dev2')
        }
        clientAuth {
            client()
            devLogin = true
        }
        gradleOnlyClient {
            client()
            programArguments.addAll('--username', 'Dev3')
            ideName = ""
        }
        gradleOnlyClient2 {
            client()
            programArguments.addAll('--username', 'Dev4')
            disableIdeRun()
        }
        data {
            data()
        }
        server {
            server()
        }
        apitest {
            client()
            sourceSet = sourceSets.api
        }
    }

    mods {
        testproject {
            sourceSet sourceSets.main
            sourceSet sourceSets.api
            sourceSet project(":subproject").sourceSets.main
        }
    }

    parchment {
        minecraftVersion = "1.21"
        mappingsVersion = "2024.06.23"
    }

    unitTest {
        enable()
        testedMod = mods.testproject
    }

    additionalMinecraftArtifacts.put('vanillaDeobfuscated', project.file('build/vanilla.jar'))
}

neoFormRuntime {
    useEclipseCompiler = true
    // enableCache = false
    // verbose = true
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url rootProject.file('repo')
        }
    }
}
